parameters:
    supported_extensions:
        - image/tiff

    exif_fields:
        # dataPid is required to fetch the relevant record from the Datahub
        data_pid:
            exif: 'ImageDescription'
            field: 'pidafbeelding'
        # originalfilename is required to find the matching resource in ResourceSpace
        originalfilename:
            exif: 'FileName'
            field: 'originalfilename'
        # All other fields are optional
        camera:
            exif: 'Model'
            field: 'camera'
        mime_type:
            exif: 'MimeType'
            field: 'digitalsourcetype'
        file_size:
            exif: 'FileSize'
            field: 'videosize'
        work_pid:
            exif: 'DocumentName'
            field: 'pidobject'
        right_usage_terms:
            exif: 'Copyright'
            field: 'rightusageterms'
        creator_of_image:
            exif: 'Artist'
            field: 'creatorofimage'
        credit_line:
            exif: 'Artist'
            field: 'creditline'
        date_created:
            exif: 'DateTimeOriginal'
            field: 'datecreatedofimage'

    datahub_languages:
        - nl
        - en
    datahub_namespace: 'lido'
    datahub_metadataprefix: 'oai_lido'
    datahub_data_definition:
        title:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/objectIdentificationWrap/titleWrap/titleSet/appellationValue'
            field: 'titleofartworkobject'
            label: 'Title'
        short_description:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/objectIdentificationWrap/objectDescriptionWrap/objectDescriptionSet/descriptiveNoteValue'
            field: 'description'
        creator:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/eventWrap/eventSet/event[eventType/term="production"]/eventActor/actorInRole/actor/nameActorSet/appellationValue[@pref="preferred"]'
            field: 'creatorofartworkobje'
            label: 'Artist'
        period:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/eventWrap/eventSet/event[eventType/term="production"]/periodName/term'
            field: 'work-period'
            label: 'Period'
        date:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/eventWrap/eventSet/event[eventType/term="production"]/eventDate/displayDate'
            label: 'Date'
        earliest_date:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/eventWrap/eventSet/event[eventType/term="production"]/eventDate/date/earliestDate'
            label: 'EarliestDate'
        latest_date:
            xpath: 'descriptiveMetadata[@xml:lang="{language}"]/eventWrap/eventSet/event[eventType/term="production"]/eventDate/date/latestDate'
            label: 'LatestDate'
        publisher:
            xpath: 'administrativeMetadata[@xml:lang="{language}"]/recordWrap/recordSource/legalBodyName/appellationValue'
            field: 'publisher'
            label: 'Credit Line'
        keywords:
            xpaths:
              - 'descriptiveMetadata[@xml:lang="{language}"]/objectClassificationWrap/objectWorkTypeWrap/objectWorkType/conceptID[@source="AAT"]'
              - 'descriptiveMetadata[@xml:lang="{language}"]/objectClassificationWrap/objectWorkTypeWrap/objectWorkType/term[@pref="preferred"]'
            field: 'keywords'

services:
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\ResourceSpace\:
        resource: '../../src/AppBundle/ResourceSpace/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/ResourceSpace/{Entity,Repository,Tests}'

    app.command.fill_resourcespace_command:
        class: AppBundle\ResourceSpace\Command\FillResourceSpaceCommand
        tags:
            -  { name: console.command }
